
#spring.datasource.url = jdbc:mysql://localhost:3306/munchdb
spring.datasource.url = ${MYSQL_DATASOURCE_URL}
spring.datasource.username = ${MYSQL_DATASOURCE_USERNAME}
spring.datasource.password = ${MYSQL_DATASOURCE_PASSWORD}

#secret key 

jwt.secret=${JWT_SECRET_KEY}
#10 minutes validity
jwt.token.validity=600000

#secret key for stripe
#Remember to switch to live secret key in production for actual payment to take place.
stripe.secret=${STRIPE_SECRET_KEY}

#signing secret key for webhook endpoint obtained using Stripe CLI
#Rmb to change to live one for actual payment to take place
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB

#Using Gmail’s SMTP server, you can take advantage of Gmail’s features, such as 
#spam filtering and support for sending mail from custom domains
#Configurations to use Gmail SMTP server to send out email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USERNAME}
#16 character AppPassword generated by Google Account
spring.mail.password=${GMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
#Some SMTP servers require a TLS connection so we enable it
spring.mail.properties.mail.smtp.starttls.enable=true